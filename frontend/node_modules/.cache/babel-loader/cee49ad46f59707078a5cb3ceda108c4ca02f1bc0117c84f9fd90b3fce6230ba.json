{"ast":null,"code":"var _jsxFileName = \"/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Demo.scss';\nimport { useParams } from 'react-router-dom';\nimport Particles from '../elements/Particles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CharacterPage() {\n  _s();\n  const [messages, setMessages] = useState([]); // State to store the messages\n  const [inputValue, setInputValue] = useState(''); // State to track textarea input\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim() !== '') {\n      // Append new message on top of the list\n      setMessages([inputValue, ...messages]);\n      setInputValue(''); // Clear textarea after submit\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"characterDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"characterContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            placeholder: \"Enter your message\",\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary mt-2\",\n            children: \"Submit Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList mt-3\",\n          children: messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageItem alert alert-secondary\",\n            children: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(CharacterPage, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = CharacterPage;\nexport default CharacterPage;\nvar _c;\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"names":["React","useState","useParams","Particles","jsxDEV","_jsxDEV","CharacterPage","_s","messages","setMessages","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","className","children","onSubmit","value","onChange","target","placeholder","rows","fileName","_jsxFileName","lineNumber","columnNumber","type","length","map","message","index","_c","$RefreshReg$"],"sources":["/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Demo.scss';\nimport { useParams } from 'react-router-dom';\nimport Particles from '../elements/Particles';\n\nfunction CharacterPage() {\n    const [messages, setMessages] = useState([]); // State to store the messages\n    const [inputValue, setInputValue] = useState(''); // State to track textarea input\n\n    // Function to handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim() !== '') {\n        // Append new message on top of the list\n        setMessages([inputValue, ...messages]);\n        setInputValue(''); // Clear textarea after submit\n        }\n    };\n\n    return (\n        <div className='topContainer'>\n            <div className=\"characterDisplay\">\n                <div className=\"characterContainer\">\n                {/* Form for submitting messages */}\n                <form onSubmit={handleSubmit}>\n                    <textarea\n                    className=\"form-control\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    placeholder=\"Enter your message\"\n                    rows=\"3\"\n                    />\n                    <button type=\"submit\" className=\"btn btn-primary mt-2\">\n                    Submit Message\n                    </button>\n                </form>\n\n                {/* Display the submitted messages */}\n                <div className=\"messageList mt-3\">\n                    {messages.length > 0 ? (\n                    messages.map((message, index) => (\n                        <div key={index} className=\"messageItem alert alert-secondary\">\n                        {message}\n                        </div>\n                    ))\n                    ) : (\n                    <p>No messages yet.</p>\n                    )}\n                </div>\n                </div>\n            </div>\n            <Particles />\n        </div>\n    );\n}\n\nexport default CharacterPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}