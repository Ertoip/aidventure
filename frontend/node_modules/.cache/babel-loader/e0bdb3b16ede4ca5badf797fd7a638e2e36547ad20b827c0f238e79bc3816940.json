{"ast":null,"code":"var _jsxFileName = \"/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  _s();\n  const [messages, setMessages] = useState([]); // State to store the messages\n  const [inputValue, setInputValue] = useState(''); // State to track textarea input\n  const textareaRef = useRef(null); // Ref to access the textarea\n\n  // Function to handle form submission\n  const handleSubmit = async () => {\n    if (inputValue.trim() !== '') {\n      const userMessage = {\n        text: inputValue,\n        type: 'user'\n      };\n\n      // Append the user message to the bottom of the message list\n      setMessages([...messages, userMessage]);\n\n      // Send the message to FastAPI backend\n      const response = await fetch('http://127.0.0.1:8000/send-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputValue\n        })\n      });\n      const data = await response.json();\n      const responseMessage = {\n        text: data.message,\n        type: 'response'\n      };\n\n      // Append the backend response after the user message\n      setMessages([...messages, userMessage, responseMessage]);\n      setInputValue(''); // Clear textarea after submit\n    }\n  };\n\n  // Utility function to convert newlines to <br /> tags\n  const renderMessageWithNewlines = message => {\n    return message.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this));\n  };\n\n  // Handle Enter (submit) and Shift+Enter (newline)\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      if (e.shiftKey) {\n        // Allow newline when Shift + Enter is pressed\n        return;\n      } else {\n        // Prevent default Enter behavior and submit the form\n        e.preventDefault();\n        handleSubmit();\n      }\n    }\n  };\n\n  // Adjust the textarea height dynamically based on content\n  const handleInput = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto'; // Reset the height\n      textarea.style.height = `${Math.min(textarea.scrollHeight, 5 * 24)}px`; // Max height of 5 lines (assuming 24px line height)\n    }\n  };\n  useEffect(() => {\n    // Adjust textarea height on initial render (if there is any preloaded content)\n    handleInput();\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList\",\n          children: messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: message.type === 'user' ? 'messageItemUser' : 'messageItemResponse',\n            children: renderMessageWithNewlines(message.text)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageItemResponse\",\n            children: \"Generating text...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chatForm\",\n          onSubmit: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: textareaRef,\n              className: \"chatInput\",\n              value: inputValue,\n              onChange: e => {\n                setInputValue(e.target.value);\n                handleInput(); // Dynamically adjust height as the user types\n              },\n              onKeyDown: handleKeyDown // Handle Enter and Shift+Enter\n              ,\n              onInput: handleInput // Trigger dynamic resizing\n              ,\n              placeholder: \"Enter your message\",\n              rows: \"1\",\n              style: {\n                overflowY: 'auto',\n                lineHeight: '24px',\n                maxHeight: '144px'\n              } // Set a max height equivalent to 5 lines\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"submitButton\",\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {\n      style: {\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(Demo, \"/jsWN4TqMAvKJbUnmRk6DSQ5Z2I=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Particles","jsxDEV","_jsxDEV","Demo","_s","messages","setMessages","inputValue","setInputValue","textareaRef","handleSubmit","trim","userMessage","text","type","response","fetch","method","headers","body","JSON","stringify","message","data","json","responseMessage","renderMessageWithNewlines","split","map","line","index","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","handleKeyDown","e","key","shiftKey","preventDefault","handleInput","textarea","current","style","height","Math","min","scrollHeight","className","length","onSubmit","ref","value","onChange","target","onKeyDown","onInput","placeholder","rows","overflowY","lineHeight","maxHeight","onClick","zIndex","_c","$RefreshReg$"],"sources":["/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\n\nfunction Demo() {\n    const [messages, setMessages] = useState([]); // State to store the messages\n    const [inputValue, setInputValue] = useState(''); // State to track textarea input\n    const textareaRef = useRef(null); // Ref to access the textarea\n\n    // Function to handle form submission\n    const handleSubmit = async () => {\n        if (inputValue.trim() !== '') {\n            const userMessage = { text: inputValue, type: 'user' };\n\n            // Append the user message to the bottom of the message list\n            setMessages([...messages, userMessage]);\n\n            // Send the message to FastAPI backend\n            const response = await fetch('http://127.0.0.1:8000/send-message', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ message: inputValue }),\n            });\n\n            const data = await response.json();\n            const responseMessage = { text: data.message, type: 'response' };\n\n            // Append the backend response after the user message\n            setMessages([...messages, userMessage, responseMessage]);\n\n            setInputValue(''); // Clear textarea after submit\n        }\n    };\n\n    // Utility function to convert newlines to <br /> tags\n    const renderMessageWithNewlines = (message) => {\n        return message.split('\\n').map((line, index) => (\n            <React.Fragment key={index}>\n                {line}\n                <br />\n            </React.Fragment>\n        ));\n    };\n\n    // Handle Enter (submit) and Shift+Enter (newline)\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            if (e.shiftKey) {\n                // Allow newline when Shift + Enter is pressed\n                return;\n            } else {\n                // Prevent default Enter behavior and submit the form\n                e.preventDefault();\n                handleSubmit();\n            }\n        }\n    };\n\n    // Adjust the textarea height dynamically based on content\n    const handleInput = () => {\n        const textarea = textareaRef.current;\n        if (textarea) {\n            textarea.style.height = 'auto'; // Reset the height\n            textarea.style.height = `${Math.min(textarea.scrollHeight, 5 * 24)}px`; // Max height of 5 lines (assuming 24px line height)\n        }\n    };\n\n    useEffect(() => {\n        // Adjust textarea height on initial render (if there is any preloaded content)\n        handleInput();\n    }, [inputValue]);\n\n    return (\n        <div className='topContainer'>\n            <div className=\"chatDisplay\">\n                <div className=\"chatContainer\">\n                    {/* Display the submitted messages */}\n                    <div className=\"messageList\">\n                        {messages.length > 0 ? (\n                            messages.map((message, index) => (\n                                <div\n                                    key={index}\n                                    className={\n                                        message.type === 'user'\n                                            ? 'messageItemUser'\n                                            : 'messageItemResponse'\n                                    }\n                                >\n                                    {renderMessageWithNewlines(message.text)}\n                                </div>\n                            ))\n                        ) : (\n                            <div className=\"messageItemResponse\">\n                                Generating text...\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Form for submitting messages */}\n                    <form className=\"chatForm\" onSubmit={(e) => e.preventDefault()}>\n                        <div className=\"inputWrapper\">\n                            <textarea\n                                ref={textareaRef}\n                                className=\"chatInput\"\n                                value={inputValue}\n                                onChange={(e) => {\n                                    setInputValue(e.target.value);\n                                    handleInput(); // Dynamically adjust height as the user types\n                                }}\n                                onKeyDown={handleKeyDown} // Handle Enter and Shift+Enter\n                                onInput={handleInput} // Trigger dynamic resizing\n                                placeholder=\"Enter your message\"\n                                rows=\"1\"\n                                style={{ overflowY: 'auto', lineHeight: '24px', maxHeight: '144px' }} // Set a max height equivalent to 5 lines\n                            />\n                            <button type=\"button\" className=\"submitButton\" onClick={handleSubmit}>\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            {/* Ensure Particles have a lower z-index so they don't block elements */}\n            <Particles style={{ zIndex: 0 }} />\n        </div>\n    );\n}\n\nexport default Demo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}