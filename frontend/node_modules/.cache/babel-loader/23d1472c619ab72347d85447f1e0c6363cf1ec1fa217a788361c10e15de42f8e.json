{"ast":null,"code":"var _jsxFileName = \"/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  _s();\n  const [messages, setMessages] = useState([]); // State to store the messages\n  const [inputValue, setInputValue] = useState(''); // State to track textarea input\n  const messagesEndRef = useRef(null); // Ref to scroll to the latest message\n\n  // Function to auto-scroll to the bottom\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom(); // Scroll to the latest message when messages change\n  }, [messages]);\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim() !== '') {\n      // Append new message on top of the list\n      setMessages([inputValue, ...messages]);\n      setInputValue(''); // Clear textarea after submit\n    }\n  };\n\n  // Function to auto-resize the textarea based on content\n  const handleInputChange = e => {\n    e.target.style.height = 'auto'; // Reset the height\n    e.target.style.height = `${e.target.scrollHeight}px`; // Adjust to fit content\n    setInputValue(e.target.value); // Update input state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"chatForm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submitButton\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-paper-plane\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chatInput\",\n              value: inputValue,\n              onChange: handleInputChange,\n              placeholder: \"Enter your message\",\n              rows: \"1\",\n              style: {\n                overflowY: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList\",\n          children: [messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageItem\",\n            children: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {\n      style: {\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Demo, \"rJMVIAZujy6iYyd6i0Ir69jnH9I=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Particles","jsxDEV","_jsxDEV","Demo","_s","messages","setMessages","inputValue","setInputValue","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","handleInputChange","target","style","height","scrollHeight","value","className","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","overflowY","length","map","message","index","ref","zIndex","_c","$RefreshReg$"],"sources":["/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\n\nfunction Demo() {\n    const [messages, setMessages] = useState([]); // State to store the messages\n    const [inputValue, setInputValue] = useState(''); // State to track textarea input\n    const messagesEndRef = useRef(null); // Ref to scroll to the latest message\n\n    // Function to auto-scroll to the bottom\n    const scrollToBottom = () => {\n        if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    };\n\n    useEffect(() => {\n        scrollToBottom(); // Scroll to the latest message when messages change\n    }, [messages]);\n\n    // Function to handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim() !== '') {\n            // Append new message on top of the list\n            setMessages([inputValue, ...messages]);\n            setInputValue(''); // Clear textarea after submit\n        }\n    };\n\n    // Function to auto-resize the textarea based on content\n    const handleInputChange = (e) => {\n        e.target.style.height = 'auto'; // Reset the height\n        e.target.style.height = `${e.target.scrollHeight}px`; // Adjust to fit content\n        setInputValue(e.target.value); // Update input state\n    };\n\n    return (\n        <div className='topContainer'>\n            <div className=\"chatDisplay\">\n                <div className=\"chatContainer\">\n                    <form onSubmit={handleSubmit} className=\"chatForm\">\n                        <div className=\"inputWrapper\">\n                            <button type=\"submit\" className=\"submitButton\">\n                                <i className=\"fas fa-paper-plane\"></i>\n                            </button>\n                            <textarea\n                                className=\"chatInput\"\n                                value={inputValue}\n                                onChange={handleInputChange}\n                                placeholder=\"Enter your message\"\n                                rows=\"1\"\n                                style={{ overflowY: 'auto' }}\n                            />\n                        </div>\n                    </form>\n\n                    <div className=\"messageList\">\n                        {messages.length > 0 ? (\n                            messages.map((message, index) => (\n                                <div key={index} className=\"messageItem\">\n                                    {message}\n                                </div>\n                            ))\n                        ) : (\n                            <p>No messages yet.</p>\n                        )}\n                        <div ref={messagesEndRef} /> {/* Scroll target */}\n                    </div>\n                </div>\n            </div>\n            <Particles style={{ zIndex: 0 }} />\n        </div>\n    );\n}\n\nexport default Demo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,aAAa;AACpB,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAMY,cAAc,GAAGV,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMW,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAID,cAAc,CAACE,OAAO,EAAE;MACxBF,cAAc,CAACE,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACjE;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZY,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIT,UAAU,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1B;MACAX,WAAW,CAAC,CAACC,UAAU,EAAE,GAAGF,QAAQ,CAAC,CAAC;MACtCG,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;;EAED;EACA,MAAMU,iBAAiB,GAAIH,CAAC,IAAK;IAC7BA,CAAC,CAACI,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM,CAAC,CAAC;IAChCN,CAAC,CAACI,MAAM,CAACC,KAAK,CAACC,MAAM,GAAI,GAAEN,CAAC,CAACI,MAAM,CAACG,YAAa,IAAG,CAAC,CAAC;IACtDd,aAAa,CAACO,CAAC,CAACI,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBvB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBvB,OAAA;QAAKsB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BvB,OAAA;UAAMwB,QAAQ,EAAEZ,YAAa;UAACU,SAAS,EAAC,UAAU;UAAAC,QAAA,eAC9CvB,OAAA;YAAKsB,SAAS,EAAC,cAAc;YAAAC,QAAA,gBACzBvB,OAAA;cAAQyB,IAAI,EAAC,QAAQ;cAACH,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC1CvB,OAAA;gBAAGsB,SAAS,EAAC;cAAoB;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACT7B,OAAA;cACIsB,SAAS,EAAC,WAAW;cACrBD,KAAK,EAAEhB,UAAW;cAClByB,QAAQ,EAAEd,iBAAkB;cAC5Be,WAAW,EAAC,oBAAoB;cAChCC,IAAI,EAAC,GAAG;cACRd,KAAK,EAAE;gBAAEe,SAAS,EAAE;cAAO;YAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEP7B,OAAA;UAAKsB,SAAS,EAAC,aAAa;UAAAC,QAAA,GACvBpB,QAAQ,CAAC+B,MAAM,GAAG,CAAC,GAChB/B,QAAQ,CAACgC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACxBrC,OAAA;YAAiBsB,SAAS,EAAC,aAAa;YAAAC,QAAA,EACnCa;UAAO,GADFC,KAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACR,CAAC,gBAEF7B,OAAA;YAAAuB,QAAA,EAAG;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACzB,eACD7B,OAAA;YAAKsC,GAAG,EAAE/B;UAAe;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN7B,OAAA,CAACF,SAAS;MAACoB,KAAK,EAAE;QAAEqB,MAAM,EAAE;MAAE;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd;AAAC3B,EAAA,CAtEQD,IAAI;AAAAuC,EAAA,GAAJvC,IAAI;AAwEb,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}