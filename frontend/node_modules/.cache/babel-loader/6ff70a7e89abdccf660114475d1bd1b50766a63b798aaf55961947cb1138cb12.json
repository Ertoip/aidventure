{"ast":null,"code":"var _jsxFileName = \"/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  _s();\n  const [messages, setMessages] = useState([]); // State to store the messages\n  const [inputValue, setInputValue] = useState(''); // State to track textarea input\n\n  // Function to handle form submission\n  const handleSubmit = async () => {\n    if (inputValue.trim() !== '') {\n      const userMessage = {\n        text: inputValue,\n        type: 'user'\n      };\n\n      // Append the user message to the bottom of the message list\n      setMessages([...messages, userMessage]);\n\n      // Send the message to FastAPI backend\n      const response = await fetch('http://127.0.0.1:8000/send-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputValue\n        })\n      });\n      const data = await response.json();\n      const responseMessage = {\n        text: data.message,\n        type: 'response'\n      };\n\n      // Append the backend response after the user message\n      setMessages([...messages, userMessage, responseMessage]);\n      setInputValue(''); // Clear textarea after submit\n    }\n  };\n\n  // Utility function to convert newlines to <br /> tags\n  const renderMessageWithNewlines = message => {\n    return message.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this));\n  };\n\n  // Handle Enter (submit) and Shift+Enter (newline)\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      if (e.shiftKey) {\n        // Allow newline when Shift + Enter is pressed\n        return;\n      } else {\n        // Prevent default Enter behavior and submit the form\n        e.preventDefault();\n        handleSubmit();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList\",\n          children: messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: message.type === 'user' ? 'messageItemUser' : 'messageItemResponse',\n            children: renderMessageWithNewlines(message.text)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageItemResponse\",\n            children: \"Generating text...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chatForm\",\n          onSubmit: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chatInput\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              onKeyDown: handleKeyDown // Handle Enter and Shift+Enter\n              ,\n              placeholder: \"Enter your message\",\n              rows: \"1\",\n              style: {\n                overflowY: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"submitButton\",\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {\n      style: {\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Demo, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useState","Particles","jsxDEV","_jsxDEV","Demo","_s","messages","setMessages","inputValue","setInputValue","handleSubmit","trim","userMessage","text","type","response","fetch","method","headers","body","JSON","stringify","message","data","json","responseMessage","renderMessageWithNewlines","split","map","line","index","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","handleKeyDown","e","key","shiftKey","preventDefault","className","length","onSubmit","value","onChange","target","onKeyDown","placeholder","rows","style","overflowY","onClick","zIndex","_c","$RefreshReg$"],"sources":["/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\n\nfunction Demo() {\n    const [messages, setMessages] = useState([]); // State to store the messages\n    const [inputValue, setInputValue] = useState(''); // State to track textarea input\n\n    // Function to handle form submission\n    const handleSubmit = async () => {\n        if (inputValue.trim() !== '') {\n            const userMessage = { text: inputValue, type: 'user' };\n\n            // Append the user message to the bottom of the message list\n            setMessages([...messages, userMessage]);\n\n            // Send the message to FastAPI backend\n            const response = await fetch('http://127.0.0.1:8000/send-message', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ message: inputValue }),\n            });\n\n            const data = await response.json();\n            const responseMessage = { text: data.message, type: 'response' };\n\n            // Append the backend response after the user message\n            setMessages([...messages, userMessage, responseMessage]);\n\n            setInputValue(''); // Clear textarea after submit\n        }\n    };\n\n    // Utility function to convert newlines to <br /> tags\n    const renderMessageWithNewlines = (message) => {\n        return message.split('\\n').map((line, index) => (\n            <React.Fragment key={index}>\n                {line}\n                <br />\n            </React.Fragment>\n        ));\n    };\n\n    // Handle Enter (submit) and Shift+Enter (newline)\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            if (e.shiftKey) {\n                // Allow newline when Shift + Enter is pressed\n                return;\n            } else {\n                // Prevent default Enter behavior and submit the form\n                e.preventDefault();\n                handleSubmit();\n            }\n        }\n    };\n\n    return (\n        <div className='topContainer'>\n            <div className=\"chatDisplay\">\n                <div className=\"chatContainer\">\n                    {/* Display the submitted messages */}\n                    <div className=\"messageList\">\n                        {messages.length > 0 ? (\n                            messages.map((message, index) => (\n                                <div\n                                    key={index}\n                                    className={\n                                        message.type === 'user'\n                                            ? 'messageItemUser'\n                                            : 'messageItemResponse'\n                                    }\n                                >\n                                    {renderMessageWithNewlines(message.text)}\n                                </div>\n                            ))\n                        ) : (\n                            <div className=\"messageItemResponse\">\n                                Generating text...\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Form for submitting messages */}\n                    <form className=\"chatForm\" onSubmit={(e) => e.preventDefault()}>\n                        <div className=\"inputWrapper\">\n                            <textarea\n                                className=\"chatInput\"\n                                value={inputValue}\n                                onChange={(e) => setInputValue(e.target.value)}\n                                onKeyDown={handleKeyDown} // Handle Enter and Shift+Enter\n                                placeholder=\"Enter your message\"\n                                rows=\"1\"\n                                style={{ overflowY: 'auto' }}\n                            />\n                            <button type=\"button\" className=\"submitButton\" onClick={handleSubmit}>\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            {/* Ensure Particles have a lower z-index so they don't block elements */}\n            <Particles style={{ zIndex: 0 }} />\n        </div>\n    );\n}\n\nexport default Demo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}