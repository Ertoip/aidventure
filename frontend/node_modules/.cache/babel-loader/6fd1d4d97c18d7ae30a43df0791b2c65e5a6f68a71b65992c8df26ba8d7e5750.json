{"ast":null,"code":"var _jsxFileName = \"/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  _s();\n  const [messages, setMessages] = useState([]); // State to store the messages\n  const [inputValue, setInputValue] = useState(''); // State to track textarea input\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim() !== '') {\n      // Append new message on top of the list\n      setMessages([inputValue, ...messages]);\n      setInputValue(''); // Clear textarea after submit\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"chatForm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chatInput\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              placeholder: \"Enter your message\",\n              rows: \"1\",\n              style: {\n                overflowY: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submitButton\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList\",\n          children: messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageItem\",\n            children: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {\n      style: {\n        zIndex: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Demo, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useState","Particles","jsxDEV","_jsxDEV","Demo","_s","messages","setMessages","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","className","children","onSubmit","value","onChange","target","placeholder","rows","style","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","type","length","map","message","index","zIndex","_c","$RefreshReg$"],"sources":["/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\n\nfunction Demo() {\n    const [messages, setMessages] = useState([]); // State to store the messages\n    const [inputValue, setInputValue] = useState(''); // State to track textarea input\n\n    // Function to handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim() !== '') {\n            // Append new message on top of the list\n            setMessages([inputValue, ...messages]);\n            setInputValue(''); // Clear textarea after submit\n        }\n    };\n\n    return (\n        <div className='topContainer'>\n            <div className=\"chatDisplay\">\n                <div className=\"chatContainer\">\n                    {/* Form for submitting messages */}\n                    <form onSubmit={handleSubmit} className=\"chatForm\">\n                        <div className=\"inputWrapper\">\n                            <textarea\n                                className=\"chatInput\"\n                                value={inputValue}\n                                onChange={(e) => setInputValue(e.target.value)}\n                                placeholder=\"Enter your message\"\n                                rows=\"1\" \n                                style={{ overflowY: 'auto' }}\n                            />\n                            <button type=\"submit\" className=\"submitButton\">\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                    {/* Display the submitted messages */}\n                    <div className=\"messageList\">\n                        {messages.length > 0 ? (\n                            messages.map((message, index) => (\n                                <div key={index} className=\"messageItem\">\n                                    {message}\n                                </div>\n                            ))\n                        ) : (\n                            <p>No messages yet.</p>\n                        )}\n                    </div>\n                </div>\n            </div>\n            {/* Ensure Particles have a lower z-index so they don't block elements */}\n            <Particles style={{ zIndex: 0 }} />\n        </div>\n    );\n}\n\nexport default Demo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}