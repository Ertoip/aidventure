{"ast":null,"code":"var _jsxFileName = \"/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [portraitUrl, setPortraitUrl] = useState(null);\n  const handleSubmit = async () => {\n    if (inputValue.trim() !== '') {\n      const userMessage = {\n        text: inputValue,\n        type: 'user'\n      };\n      setMessages([...messages, userMessage]);\n      const response = await fetch('http://127.0.0.1:8000/send-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputValue\n        })\n      });\n      const data = await response.json();\n      const {\n        description,\n        portrait_url\n      } = data.message;\n\n      // Set portrait and description if a portrait is generated\n      if (portrait_url) {\n        setPortraitUrl(portrait_url);\n      }\n      setMessages([...messages, userMessage, {\n        text: description,\n        type: 'response'\n      }]);\n      setInputValue('');\n    }\n  };\n  const initChat = async () => {\n    const response = await fetch('http://127.0.0.1:8000/initChat', {\n      method: 'GET'\n    });\n    const data = await response.json();\n    const {\n      description,\n      portrait_url\n    } = data.message;\n\n    // Set portrait and description if a portrait is generated\n    if (portrait_url) {\n      setPortraitUrl(portrait_url);\n    }\n    setMessages([{\n      text: description,\n      type: 'response'\n    }]);\n  };\n  useEffect(() => {\n    initChat();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        children: [portraitUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"portraitContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: portraitUrl,\n            alt: \"Character Portrait\",\n            className: \"portraitImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: message.type === 'user' ? 'messageItemUser' : 'messageItemResponse',\n            children: message.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chatForm\",\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"chatInput\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            placeholder: \"Type a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSubmit,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Demo, \"djiHlsv6nc4RCz8XM8pFjqyBKAY=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useState","useEffect","Particles","jsxDEV","_jsxDEV","Demo","_s","messages","setMessages","inputValue","setInputValue","portraitUrl","setPortraitUrl","handleSubmit","trim","userMessage","text","type","response","fetch","method","headers","body","JSON","stringify","message","data","json","description","portrait_url","initChat","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","e","preventDefault","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/pietro/Desktop/aidventure/frontend/src/pages/Demo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './Demo.scss';\nimport Particles from '../elements/Particles';\n\nfunction Demo() {\n    const [messages, setMessages] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [portraitUrl, setPortraitUrl] = useState(null);\n\n    const handleSubmit = async () => {\n        if (inputValue.trim() !== '') {\n            const userMessage = { text: inputValue, type: 'user' };\n            setMessages([...messages, userMessage]);\n\n            const response = await fetch('http://127.0.0.1:8000/send-message', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ message: inputValue }),\n            });\n\n            const data = await response.json();\n            const { description, portrait_url } = data.message;\n\n            // Set portrait and description if a portrait is generated\n            if (portrait_url) {\n                setPortraitUrl(portrait_url);\n            }\n\n            setMessages([...messages, userMessage, { text: description, type: 'response' }]);\n            setInputValue('');\n        }\n    };\n\n    const initChat = async () => {\n        const response = await fetch('http://127.0.0.1:8000/initChat', {\n            method: 'GET',\n        });\n        const data = await response.json();\n        const { description, portrait_url } = data.message;\n\n        // Set portrait and description if a portrait is generated\n        if (portrait_url) {\n            setPortraitUrl(portrait_url);\n        }\n\n        setMessages([{ text: description, type: 'response' }]);\n    };\n\n    useEffect(() => {\n        initChat();\n    }, []);\n\n    return (\n        <div className=\"topContainer\">\n            <div className=\"chatDisplay\">\n                <div className=\"chatContainer\">\n                    {/* Display the portrait at the top */}\n                    {portraitUrl && (\n                        <div className=\"portraitContainer\">\n                            <img src={portraitUrl} alt=\"Character Portrait\" className=\"portraitImage\" />\n                        </div>\n                    )}\n                    \n                    {/* Display the submitted messages */}\n                    <div className=\"messageList\">\n                        {messages.map((message, index) => (\n                            <div key={index} className={message.type === 'user' ? 'messageItemUser' : 'messageItemResponse'}>\n                                {message.text}\n                            </div>\n                        ))}\n                    </div>\n\n                    {/* Form for submitting messages */}\n                    <form className=\"chatForm\" onSubmit={(e) => e.preventDefault()}>\n                        <textarea\n                            className=\"chatInput\"\n                            value={inputValue}\n                            onChange={(e) => setInputValue(e.target.value)}\n                            placeholder=\"Type a message\"\n                        />\n                        <button type=\"button\" onClick={handleSubmit}>Send</button>\n                    </form>\n                </div>\n            </div>\n            <Particles />\n        </div>\n    );\n}\n\nexport default Demo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}